<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="me.gacl.mapping.userMapper"就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀)
 -->
<mapper namespace="com.hottop.raisehot.dao.UserDAO">

	<resultMap type="User" id="userResultMap">
		<id property="id" column="id" />
		<result property="phoneNumber" column="phone_number" />
		<result property="userType" column="user_type" />
		<result property="password" column="password" />
		<result property="nickName" column="nick_name" />
		<result property="wechatId" column="wechat_id" />
		<result property="isNumber" column="is_number" />
		<result property="isName" column="is_name" />
		<result property="qq" column="qq" />
		<result property="province" column="province" />
		<result property="address" column="gold_coins" />
		<result property="status" column="status" />
		<result property="goldCoins" column="gold_coins" />
		<result property="creator.id" column="creator" />
		<result property="modifier.id" column="modifier" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
		<result property="startDate" column="start_date" />
		<result property="endDate" column="end_date" />
		<result property="version" column="version" />
		<result property="remark" column="remark" />
	</resultMap>

	<insert id="insertUser" parameterType="User" keyProperty="id">
		INSERT INTO tb_user
		(id, phone_number, user_type, password, nick_name,
		wechat_id, is_number, is_name, qq, province, gold_coins,
		status,
		creator, modifier, create_time, update_time, start_date, end_date,
		version, remark)
		VALUES
		(#{id}, #{phoneNumber}, #{userType},
		#{password}, #{nickName}, #{wechatId}, #{isNumber}, #{isName}, #{qq},
		#{province}, #{goldCoins},
		#{status}, #{creator.id}, #{modifier.id},
		#{createTime}, #{updateTime}, #{startDate}, #{endDate}, #{version},
		#{remark})
	</insert>

	<update id="userModifyStatus">
		UPDATE tb_user
		SET
		status = #{opt}
		WHERE id = #{id}
	</update>
    
        <!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复
    使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型
    resultType="me.gacl.domain.User"就表示将查询结果封装成一个User类的对象返回
    User类就是users表所对应的实体类
    -->
    <select id="getUserLogin" parameterType="Map" resultType="User">
	SELECT
	phone_number,
	user_type,
	password,
	nick_name,
	wechat_id,
	is_number,
	is_name,
	qq,
	province,
	gold_coins,
	status
	FROM tb_user
	where phone_number= #{phoneNumber}
	and password = #{password}
	limit 0,1
</select>

	<select id="getAllUser" parameterType="User" resultMap="userResultMap">
		SELECT
		phone_number,
		user_type,
		password,
		nick_name,
		wechat_id,
		is_number,
		is_name,
		qq,
		province,
		gold_coins,
		status,
		creator,
		modifier,
		create_time,
		update_Time,
		start_date,
		end_date,
		version,
		remark
		FROM tb_user
	</select>
	<select id="getUserById" parameterType="Long" resultType="User">
		SELECT
		phone_number,
		user_type,
		nick_name,
		wechat_id,
		is_number,
		is_name,
		qq,
		province,
		gold_coins,
		status
		FROM tb_user
		where id= #{id}
	</select>
</mapper>